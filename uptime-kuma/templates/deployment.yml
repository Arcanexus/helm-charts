apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime-kuma
spec:
  selector:
    matchLabels:
      app: {{ include "app.name" . }} # has to match .spec.template.metadata.labels
  replicas: {{ .Values.pods.uptimekuma.replicas }}
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: {{ include "app.name" . }} # has to match .spec.selector.matchLabels
        # date: "{{ now | unixEpoch }}"
        app.kubernetes.io/name: {{ include "app.name" . }}
        helm.sh/chart: {{ include "app.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext:
        runAsUser: {{ .Values.pods.uptimekuma.security.runAsUser }}
        runAsGroup: {{ .Values.pods.uptimekuma.security.runAsGroup }}
      {{- if .Values.pods.db.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.pods.db.nodeSelector | nindent 8 }}
      {{- end }}
      initContainers:
      - name: wait-for-db
        image: busybox
        command: ['sh', '-c', 'until nslookup uptime-kuma-db; do echo waiting for db; sleep 2; done;']
      containers:
      - name: {{ include "app.name" . }}
        image: {{ .Values.pods.uptimekuma.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.pods.uptimekuma.httpContainerPort }}
          name: uptimekuma-http
        volumeMounts:
        - name: {{ include "app.name" . }}-{{ .Values.volumes.uptimekumaconfig.name }}
          mountPath: {{ .Values.volumes.uptimekumaconfig.containerMountPath }}
        env:
          - name: TZ
            value: "Europe/Paris"
          - name: PGID
            value: "{{ .Values.pods.uptimekuma.security.runAsGroup }}"
          - name: PUID
            value: "{{ .Values.pods.uptimekuma.security.runAsUser }}"

      volumes:
      - name: {{ include "app.name" . }}-{{ .Values.volumes.uptimekumaconfig.name }}
        nfs:
          server: {{ .Values.volumes.uptimekumaconfig.server }}
          path: {{ .Values.volumes.uptimekumaconfig.path }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: uptime-kuma-db
spec:
  selector:
    matchLabels:
      app: {{ include "app.name" . }}-db # has to match .spec.template.metadata.labels
  replicas: {{ .Values.pods.db.replicas }}
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: {{ include "app.name" . }}-db # has to match .spec.selector.matchLabels
        # date: "{{ now | unixEpoch }}"
        app.kubernetes.io/name: {{ include "app.name" . }}
        helm.sh/chart: {{ include "app.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext:
        runAsUser: {{ .Values.pods.db.security.runAsUser }}
        runAsGroup: {{ .Values.pods.db.security.runAsGroup }}
      {{- if .Values.pods.db.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.pods.db.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ include "app.name" . }}
        image: {{ .Values.pods.db.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.pods.db.dbContainerPort }}
          name: db-port
        volumeMounts:
        - name: {{ include "app.name" . }}-{{ .Values.volumes.uptimekumadata.name }}
          mountPath: {{ .Values.volumes.uptimekumadata.containerMountPath }}
        env:
          - name: TZ
            value: "Europe/Paris"
          - name: PGID
            value: "{{ .Values.pods.db.security.runAsGroup }}"
          - name: PUID
            value: "{{ .Values.pods.db.security.runAsUser }}"
          - name: MARIADB_ROOT_PASSWORD
            value: 'kuma'
          - name: MARIADB_DATABASE
            value: 'kuma'
          - name: MARIADB_USER
            value: 'kuma'
          - name: MARIADB_PASSWORD
            value: 'kuma'
      volumes:
      - name: {{ include "app.name" . }}-{{ .Values.volumes.uptimekumadata.name }}
        nfs:
          server: {{ .Values.volumes.uptimekumadata.server }}
          path: {{ .Values.volumes.uptimekumadata.path }}
