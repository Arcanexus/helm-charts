apiVersion: apps/v1
kind: Deployment
metadata:
  name: litellm
  labels:
    app: litellm
spec:
  selector:
    matchLabels:
      app: {{ include "app.name" . }} # has to match .spec.template.metadata.labels
  replicas: {{ .Values.pods.litellm.replicas }}
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: {{ include "app.name" . }} # has to match .spec.selector.matchLabels
        # date: "{{ now | unixEpoch }}"
        app.kubernetes.io/name: {{ include "app.name" . }}
        helm.sh/chart: {{ include "app.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      {{- if .Values.pods.litellm.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.pods.litellm.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
      - name: litellm
        image: {{ .Values.pods.litellm.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.pods.litellm.httpContainerPort }}
          name: litellm-http
        env:
          - name: TZ
            value: "Europe/Paris"
          - name: DATABASE_URL
            value: "postgresql://{{ .Values.pods.postgres.username }}:{{ .Values.pods.postgres.password }}@litellm-postgres:5432/{{ .Values.pods.postgres.database }}"
          - name: LITELLM_MASTER_KEY
            valueFrom:
              secretKeyRef:
                name: litellm-secrets
                key: LITELLM_MASTER_KEY
          {{- if .Values.pods.litellm.environment }}
            {{- toYaml .Values.pods.litellm.environment | nindent 10 }}
          {{- end }}
        volumeMounts:
        - name: config-volume
          mountPath: /app/proxy_server_config.yaml
          subPath: config.yaml
        envFrom:
        - secretRef:
            name: litellm-secrets
      volumes:
        - name: config-volume
          configMap:
            name: litellm-config-file


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: litellm-postgres
  labels:
    app: litellm-postgres
spec:
  replicas: {{ .Values.pods.postgres.replicas }}
  selector:
    matchLabels:
      app: litellm-postgres
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: litellm-postgres
        app.kubernetes.io/name: litellm-postgres
        helm.sh/chart: {{ include "app.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      containers:
      - name: postgres
        image: {{ .Values.pods.postgres.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
        env:
        - name: TZ
          value: "Europe/Paris"
        - name: POSTGRES_DB
          value: {{ .Values.pods.postgres.database }}
        - name: POSTGRES_USER
          value: {{ .Values.pods.postgres.username }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: litellm-postgres-secrets
              key: password
        volumeMounts:
        - name: postgres-data
          mountPath: {{ .Values.volumes.db.containerMountPath }}
      volumes:
      - name: postgres-data
        nfs:
          server: {{ .Values.volumes.db.server }}
          path: {{ .Values.volumes.db.path }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openwebui
  labels:
    app: openwebui
spec:
  replicas: {{ .Values.pods.openwebui.replicas }}
  selector:
    matchLabels:
      app: openwebui
  revisionHistoryLimit: 0
  template:
    metadata:
      labels:
        app: openwebui
        app.kubernetes.io/name: openwebui
        helm.sh/chart: {{ include "app.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      containers:
      - name: openwebui
        image: {{ .Values.pods.openwebui.image }}
        imagePullPolicy: Always
        ports:
        - containerPort: {{ .Values.pods.openwebui.httpContainerPort }}
          name: openwebui-http
        volumeMounts:
        - name: openwebui-data
          mountPath: {{ .Values.volumes.openwebui.containerMountPath }}
        env:
          - name: TZ
            value: "Europe/Paris"
          - name: OPENAI_API_KEY
            valueFrom:
              secretKeyRef:
                name: litellm-secrets
                key: LITELLM_MASTER_KEY
          - name: OPENAI_API_BASE_URL
            value: "https://{{ .Values.pods.litellm.ingress.host }}/v1"
          {{- if .Values.pods.openwebui.environment }}
            {{- toYaml .Values.pods.openwebui.environment | nindent 10 }}
          {{- end }}
      volumes:
      - name: openwebui-data
        nfs:
          server: {{ .Values.volumes.openwebui.server }}
          path: {{ .Values.volumes.openwebui.path }}
