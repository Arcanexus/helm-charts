{{- if .Values.pods.ctbrec.ingress.enabled }}
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: {{ include "app.name" . }}-ctbrecingress
#   annotations:
#     traefik.ingress.kubernetes.io/router.entrypoints: websecure
#     {{- if .Values.pods.ctbrec.ingress.annotations }}
#     {{- toYaml .Values.pods.ctbrec.ingress.annotations | nindent 4 }}
#     {{- end }}
# spec:
#   ingressClassName: traefik
#   tls:
#     - hosts:
#         - {{ .Values.pods.ctbrec.ingress.host }}
#       secretName: {{ include "app.name" . }}-ctbrecingress-tls
#   rules:
#     - host: {{ .Values.pods.ctbrec.ingress.host }}
#       http:
#         paths:
#           - path: /
#             pathType: ImplementationSpecific
#             backend:
#               service:
#                 name: {{ include "app.name" . }}-ctbrechttpsservice
#                 port:
#                   number: {{ .Values.pods.ctbrec.httpsContainerPort }}


apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ include "app.name" . }}-ctbrecingressroute
  annotations:
    {{- if .Values.pods.ctbrec.ingress.annotations }}
    {{- toYaml .Values.pods.ctbrec.ingress.annotations | nindent 4 }}
    {{- end }}
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`{{ .Values.pods.ctbrec.ingress.host }}`) 
      kind: Rule
      middlewares:
        - name: no-tls-verify
      services:
        - name: {{ include "app.name" . }}-ctbrechttpsservice
          port: {{ .Values.pods.ctbrec.httpsContainerPort }}
          scheme: https
  tls:
    secretName: {{ include "app.name" . }}-ctbrecingressroute-tls


{{- end }}